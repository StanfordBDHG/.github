#
# This source file is part of the Stanford Biodesign Digital Health Group open-source organization
#
# SPDX-FileCopyrightText: 2022 Stanford University and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

name: Build XCArchive

on:
  workflow_call:
    inputs:
      workspaceFile:
        description: 'The path of the Xcode Workspace file (including the file extension).'
        type: string
        required: true
      xcArchiveName:
        description: 'The name of the to be created XCArchive. It must not include the default XCArchive extension ".xcarchive" as the file naming is automatically done be the workflow.'
        type: string
        required: true
      scheme:
        description: 'The project scheme that should be used for the archiving process.'
        type: string
        required: true
      version:
        description: 'The version number of the XCFramework embedded in the XCArchives.'
        type: string
        required: true
      configuration:
        description: 'The build configuration to use when archiving the scheme, either Debug or Release.'
        type: string
        required: false
        default: 'Release'
      runsonlabels:
        description: 'JSON-based collection of labels indicating which type of github runner should be chosen.'
        type: string
        required: false
        default: '["macos-14"]'
      sdk:
        description: 'JSON-based collection of SDK for the exported framework. Defaults to all SDKs. You can list SDKs using `xcodebuild -showsdks`.'
        type: string
        required: false
        default: '["iphoneos", "iphonesimulator", "macosx", "appletvos", "appletvsimulator", "xros", "xrsimulator", "watchos", "watchsimulator"]'
      cxxInterop:
        description: 'Enable the compilation of the XCArchive with active Swift / C++ interoperability.'
        type: boolean
        required: false
        default: false

jobs:
  build-xcarchive:
    name: Build XCArchive
    runs-on: ${{ fromJson(inputs.runsonlabels) }}
    strategy:
      matrix:
        sdk: ${{ fromJson(inputs.sdk) }}
    steps:
    - uses: actions/checkout@v4
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Check environment
      run: |
          xcodebuild -version
          swift --version
          echo Release version: ${{ inputs.version }}
          echo SDK: ${{ matrix.sdk }}
    - name: Archive for ${{ matrix.sdk }} SDK
      run: |
          xcodebuild archive \
            -workspace ${{ inputs.workspaceFile }} \
            -scheme ${{ inputs.scheme }} \
            -configuration ${{ inputs.configuration }} \
            -sdk ${{ matrix.sdk }} \
            -archivePath './.build/${{ inputs.xcArchiveName }}-${{ matrix.sdk }}.xcarchive' \
            SKIP_INSTALL=NO \
            BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
            ONLY_ACTIVE_ARCH=NO \
            CI=TRUE \
            VERSION_NUMBER=${{ inputs.version }} \
            SWIFT_OBJC_INTEROP_MODE=${{ (inputs.cxxInterop && 'objcxx') || 'objc' }}
    - name: Package the XCArchive   # To preserve symlinks within the XCArchives that are not preserved by the GitHub Actions artifact upload
      run: |
          cd .build
          tar -zcvf ${{ inputs.xcArchiveName }}-${{ matrix.sdk }}.xcarchive.tar.gz ${{ inputs.xcArchiveName }}-${{ matrix.sdk }}.xcarchive
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.xcArchiveName }}-${{ matrix.sdk }}.xcarchive.tar.gz
        path: ./.build/${{ inputs.xcArchiveName }}-${{ matrix.sdk }}.xcarchive.tar.gz
