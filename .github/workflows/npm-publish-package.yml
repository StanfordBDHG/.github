#
# This source file is part of the Stanford Biodesign Digital Health Group open-source organization
#
# SPDX-FileCopyrightText: 2025 Stanford University and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

name: NPM Publish package

on:
  workflow_call:
    inputs:
      nodeVersion:
        description: |
          Node version spec of the version to use in SemVer notation.
        required: false
        type: string
        default: '22'
      cacheDependencyPath:
        description: |
          Node cache dependency path. It's required only if package-lock.json is not in the root.
        required: false
        type: string
        default: ''
      workingDirectory:
        description: |
          Set working directory if your package is not in the root.
        required: false
        type: string
        default: '.'
      packageVersion:
        description: |
          Released package version.
        required: true
        type: string
      packageTag:
        description: |
          Released package tag.
        required: false
        type: string
        default: "latest"
      workspaces:
        description: |
          Set to true to enable npm workspaces publishing.
        required: false
        type: boolean
        default: false
    secrets:
      NPM_TOKEN:
        description: |
          Used to perform authenticated operation against NPM registry.
        required: true

jobs:
  publish-package:
    name: Publish Package
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.workingDirectory }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache-dependency-path: ${{ inputs.cacheDependencyPath }}
          node-version: ${{ inputs.nodeVersion }}
          registry-url: 'https://registry.npmjs.org'
      - name: Clean Install
        run: npm ci
      - name: Set version
        run: |
          if [ "${{ inputs.workspaces }}" = "true" ]; then
            # Update version in all workspace packages
            npm version --no-git-tag-version --workspaces ${{ inputs.packageVersion }}
          else
            # Update version in root package only
            npm version --no-git-tag-version --tag ${{ inputs.packageTag }} ${{ inputs.packageVersion }}
          fi
      - name: Build
        run: npm run build
      - name: Publish
        run: |
          if [ "${{ inputs.workspaces }}" = "true" ]; then
            npm publish --workspaces --provenance --access public --tag ${{ inputs.packageTag }}
          else
            npm publish --provenance --access public --tag ${{ inputs.packageTag }}
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
