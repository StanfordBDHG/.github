#
# This source file is part of the Stanford Biodesign Digital Health Group open-source organization
#
# SPDX-FileCopyrightText: 2022 Stanford University and the project authors (see CONTRIBUTORS.md)
#
# SPDX-License-Identifier: MIT
#

name: Create XCFramework and Release

on:
  workflow_call:
    inputs:
      workspaceFile:
        description: 'The path of the Xcode Workspace file (including the file extension).'
        type: string
        required: true
      xcFrameworkNames:
        description: 'A JSON-based collection of framework names to be built and included in the XCFramework.'
        type: string
        required: true
      scheme:
        description: 'The project scheme that should be used for the archiving process.'
        type: string
        required: true
      version:
        description: 'The version number of the XCFramework embedded in the XCArchives. This version number is also used for the release tag.'
        type: string
        required: true
      configuration:
        description: 'The build configuration to use when archiving the scheme, either Debug or Release.'
        type: string
        required: false
        default: 'Release'
      dryRun:
        description: 'If true, the workflow will not commit and release the built XCFramework.'
        type: boolean
        required: false
        default: false
      runsonlabels:
        description: 'JSON-based collection of labels indicating which type of github runner should be chosen.'
        type: string
        required: false
        default: '["macos-14"]'
      sdk:
        description: 'JSON-based collection of SDK for the exported framework. Defaults to all SDKs. You can list SDKs using `xcodebuild -showsdks`.'
        type: string
        required: false
        default: '["iphoneos", "iphonesimulator", "macosx", "appletvos", "appletvsimulator", "xros", "xrsimulator", "watchos", "watchsimulator"]'
      outputpath:
        description: 'Optional Prefix for the output path'
        type: string
        required: false
        default: '.'
      user:
        description: 'Optional GitHub username that is associated with the GitHub Personal Access Token (PAT)'
        type: string
        required: false
        default: ''
    secrets:
      access-token:
        description: 'GitHub Personal Access Token (PAT) if the to-be-commited-to branch is protected and needs a specific access token to push commits to the branch'
        required: false
  
 
jobs:
  build-xcarchives: 
    name: Build XCArchives
    strategy:
      matrix:
        framework: ${{ fromJson(inputs.frameworkNames) }}
    uses: StanfordBDHG/.github/.github/workflows/archive.yml@v2
    with:
      workspaceFile: ${{ inputs.workspaceFile }}
      xcArchiveName: ${{ matrix.framework }}
      scheme: ${{ inputs.scheme }}
      version: ${{ inputs.version }}
      configuration: ${{ inputs.configuration }}
      runsonlabels: ${{ inputs.runsonlabels }}
      sdk: ${{ inputs.sdk }}
  build-xcframeworks:
    name: Build XCFrameworks
    runs-on: ${{ fromJson(inputs.runsonlabels) }}
    needs: build-xcarchives
    strategy:
      matrix:
        framework: ${{ fromJson(inputs.frameworkNames) }}
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.access-token || github.token }}
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Check environment
      run: |
          xcodebuild -version
          swift --version
          echo Release version: ${{ inputs.version }}
    - uses: actions/download-artifact@v4
      with:
        path: ./.build
        merge-multiple: true
    - name: Unpack XCArchives and create XCFramework
      run: |
          rm -rf ${{ matrix.framework }}.xcframework
          
          # Convert JSON array to space-separated string
          SDK_LIST="${{ inputs.sdk }}"
          SDK_LIST="${SDK_LIST//[\[\]\",]/}" # Remove JSON characters
          echo "Parsed SDK list: $SDK_LIST"
          
          IFS=' ' read -r -a SDKS <<< "$SDK_LIST"
          FRAMEWORKS_ARGS=""
          for SDK in "${SDKS[@]}"; do
              # Unpack the XCArchive
              tar -zxvf ./.build/${{ matrix.framework }}-${SDK}.xcarchive.tar.gz -C ./.build/
              # Specify the path to the framework within the XCArchive
              ARCHIVE_PATH="./.build/${{ matrix.framework }}-${SDK}.xcarchive/Products/Library/Frameworks/${{ matrix.framework }}.framework"
              echo "Checking archive path: $ARCHIVE_PATH"
              if [ -d "$ARCHIVE_PATH" ]; then
                  FRAMEWORKS_ARGS+="-framework $ARCHIVE_PATH "
                  echo "Archive path valid: $ARCHIVE_PATH"
              else
                  echo "Warning: Archive path for SDK $SDK does not exist: $ARCHIVE_PATH"
              fi
          done
          
          # Trim trailing space
          FRAMEWORKS_ARGS=$(echo "$FRAMEWORKS_ARGS" | xargs)
          
          echo "Executing xcodebuild with args: $FRAMEWORKS_ARGS"
          xcodebuild -create-xcframework $FRAMEWORKS_ARGS -output ${{ matrix.framework }}.xcframework | xcbeautify || { echo "xcodebuild failed"; exit 1; }
          
          rm -rf .build
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.framework }}.xcframework
        path: ${{ matrix.framework }}.xcframework

  commit-and-release:
    name: Commit and Release XCFrameworks
    runs-on: ${{ fromJson(inputs.runsonlabels) }}
    needs: build-xcframeworks
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.access-token || github.token }}
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./
        merge-multiple: true
    - name: Commit and push XCFrameworks
      uses: EndBug/add-and-commit@v9
      with:
        add: "*.xcframework"
        message: Create XCFrameworks for release ${{ inputs.version }}
        tag: '${{ inputs.version }} --force'
        tag_push: '--force'
        github_token: ${{ secrets.access-token || github.token }}
        author_name: ${{ inputs.user || github.actor }}
        author_email: ${{ inputs.user || github.actor }}@users.noreply.github.com
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: ${{ !inputs.dryRun }}
      with:
        tag_name: ${{ inputs.version }}
        generate_release_notes: true
        fail_on_unmatched_files: true
        files: |
          *.xcframework
